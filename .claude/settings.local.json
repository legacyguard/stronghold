{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(tree:*)",
      "Bash(npm install)",
      "Bash(npm run web:*)",
      "Bash(pkill:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git branch:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(git rm:*)",
      "Bash(git init:*)",
      "Bash(curl:*)",
      "Bash(supabase auth login:*)",
      "Bash(supabase login:*)",
      "Bash(supabase projects create:*)",
      "Bash(supabase orgs:*)",
      "Bash(vercel login:*)",
      "Bash(vercel:*)",
      "Bash(\"buildCommand\": \"npm run build:web\",)",
      "Bash(\"devCommand\": \"npm run web\",)",
      "Bash(\"installCommand\": \"npm install\",)",
      "Bash(\"framework\": \"nextjs\",)",
      "Bash(\"rootDirectory\": \"apps/web\")",
      "Bash(supabase projects list:*)",
      "Read(//Users/luborfedak/Documents/Hero UI/**)",
      "Read(//Users/luborfedak/Documents/Tailadmin/**)",
      "Bash(unzip:*)",
      "Bash(npx shadcn-ui:*)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(printf:*)",
      "Bash(npx:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Read(//Users/luborfedak/Documents/Github/sprint/**)",
      "Bash(npm run lint:*)",
      "Bash(chmod:*)",
      "Bash(./test-cron-endpoints.sh:*)",
      "Bash(npm run build:*)",
      "Bash(find:*)",
      "Bash(xargs sed:*)",
      "Read(///**)",
      "Bash(echo:*)",
      "Bash(SUPABASE_ACCESS_TOKEN=sbp_c0de3e17bb4db3a9db6a4aec3bd1b3b7dfc4a84a npx supabase db push)",
      "Bash(supabase db:*)",
      "Bash(supabase link:*)",
      "Bash(VERCEL_ORG_ID=legacyguards-projects VERCEL_PROJECT_ID=stronghold vercel env add NEXT_PUBLIC_SUPABASE_URL production --token=sCQdHdoLVf8aAY50aDAa9dGm --yes)",
      "Bash(/Users/luborfedak/Documents/Github/stronghold/scripts/setup_vercel_env.sh:*)",
      "WebFetch(domain:stronghold-j7x9kvy17-legacyguards-projects.vercel.app)",
      "Read(//Users/luborfedak/Documents/Github/schwalbe/docs/90-archive/hollywood-archive/**)",
      "Bash(node:*)",
      "Read(//private/tmp/**)",
      "Bash(npm run test:e2e:*)",
      "Read(//tmp/**)"
    ],
    "deny": [],
    "ask": []
  }
}